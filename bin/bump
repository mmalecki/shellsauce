#!/usr/bin/env bash
version="$1"

check_diff() {
  if [ $(git diff "$1" | wc -l) -ne 0 ]; then
    echo "Refusing to proceed - uncommitted changes to "$1" found"
    exit 1
  fi
}

if [ -z "$version" ]; then
  echo "usage: bump <version>"
  exit 2
fi

if [ -f package.json ]; then
  echo "package.json found"
  check_diff package.json
  check_diff package-lock.json

  if [ "$(json version < package.json)" != "$version" ]; then
    echo "Bumping package.json version"

    json -e "this.version=\"$1\"" < package.json > package.tmp.json
    mv package.tmp.json package.json
    git add package.json

    if [[ -f "package-lock.json" ]]; then
      json -e "this.version=\"$1\"" < package-lock.json > package-lock.tmp.json
      mv package-lock.tmp.json package-lock.json
      git add package-lock.json
    fi

    echo "Here's what I did to your package.json and package-lock.json:"
    git --no-pager diff --cached package.json package-lock.json
  fi
fi

if [ -f Cargo.toml ]; then
  echo "Cargo.toml found"
  check_diff Cargo.toml
  check_diff Cargo.lock
  sed -Ee "s/version(\s*)=(\s*)\"(.*)\"/version\1=\2\"$version\"/" -i Cargo.toml
  cargo build
  git add Cargo.toml Cargo.lock
  echo "Here's what I did to your Cargo.toml and Cargo.lock:"
  git --no-pager diff --cached Cargo.toml Cargo.lock
fi

git commit -m "Bump to version $1"

git tag -a -m "Version $1" "v$1"

if [ $? -ne 0 ]; then
  echo "Tagging failed, reverting changes I made"
  git reset --hard HEAD^
fi
